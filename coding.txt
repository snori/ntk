/******************************************************************************

	The NTK Library : CODING RULES
	Copryright (C) 1998-2003 Noritaka Suzuki

	$Id: coding.txt,v 1.2 2003/03/03 04:52:53 nsuzuki Exp $

******************************************************************************/


○ はじめに

NTK のソースを読むときに知っておくとよいと思われるコードの記述規則を簡単に説明し
ます。


○ 命名規則

・まず基本的に struct/class に付ける名前は大文字で始めます。アンダースコアは使
  用せず、大文字にする事で途中の区切りを表します。（例外 struct st 等

・変数名、関数名（メソッド名）は基本的に小文字のアルファベットとアンダースコア
  (_)のみで記述します。（例外 Bitmap::Bpp() 等

・名前空間は小文字アルファベットのみで記述します（大文字もアンダースコアも使用
  せず）。もし識別子に区切りが必要な場合、名前空間をネストします。

・メンバ変数には m_ を語頭につけます。もしグローバル変数を使うなら g_ を語尾につ
  けることもあります（つけないことも多い）。

・プライベートメソッド（関数）は語尾にアンダースコア(_)をつける。(つけなくても
  いいのですが、同名のメソッドを呼ぶ前にちょっと処理をしたい関数などを書くとき
  にこのように命名すると都合がいいと思っているのでこうしています。)

・タブ文字は行頭のみに使用する（インデント）。逆にインデントにはスペース文字は使
  用しない。行中の整形のためのスペーシングにはスペース文字のみを使用する。これは
  どんなエディタでもレイアウトを崩さずに見れるようにするためのルール。ちなみに僕
  は、いつもタブ幅は2にしています。


○ その他

・できるなら（許容範囲内の労力で実現可能なら）プラットフォーム依存の部分は無くし
  たい。ヘッダなどは特に。

・識別子を実装ファイル内ローカルにしたい場合は、static を使用するのではなく、無
  名名前空間を使用するようにする。

・出来るだけユーザのコーディングルールを優先できるようにしたい。



/*****************************************************************************/
                                     Noritaka Suzuki <snori@alles.or.jp>